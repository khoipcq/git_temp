
  function renderActive(obj){
    if(obj.aData[2]){
      return "Yes";
    }
    else {
      return "No";
    }
  }
  function renderSupport(obj){
    var feature_id = obj.aData[2];
    g_feature_ids.push(String(feature_id));
    return '<div class="radio_button"><div class="btn-group" data-toggle="buttons-radio"><label class="btn btn-small btn-white" feature_id="' + feature_id  +  '" store="1" ><input type="radio" name="options" id="option1">On</label><label class="btn btn-small btn-white active" feature_id="' + feature_id  +  '" store="0"><input type="radio" name="options" id="option2">Off</label></div></div>';
  }
  function renderSupportEdit(obj){
    var feature_id = obj.aData[2];
    var feature_status = obj.aData[1];
    g_feature_ids.push(String(feature_id));
    if(feature_status == "1"){
      return '<div class="radio_button"><div class="btn-group" data-toggle="buttons-radio"><label class="btn btn-small btn-white  active" feature_id="' + feature_id  +  '" store="1" ><input type="radio" name="options" id="option1">On</label><label class="btn btn-small btn-white" feature_id="' + feature_id  +  '" store="0"><input type="radio" name="options" id="option2">Off</label></div></div>';
    }else{
      return '<div class="radio_button"><div class="btn-group" data-toggle="buttons-radio"><label class="btn btn-small btn-white" feature_id="' + feature_id  +  '" store="1" ><input type="radio" name="options" id="option1">On</label><label class="btn btn-small btn-white active" feature_id="' + feature_id  +  '" store="0"><input type="radio" name="options" id="option2">Off</label></div></div>';
    }

  }
  function renderAction(obj){
    if(g_bDeletePricingPlan && g_bEditPricingPlan){
      var editString = '<a data-toggle="modal" href="#" onclick="view_edit_dialog(this)" class="action-link">Edit</a>';
      var deleteString = '<a data-toggle="modal" href="#delete_notice.modal" onclick="view_delete_pp_confirm(this)" class="action-link">Delete</a>';
      return editString+" "+deleteString;
     }
    else{
      return "";
     }
  }



  //Set style table
  $(document).ready(function(){



    $("#pricing_plan_form").validate({
      rules:{
        "name": {
          required: true,
          maxlength: 256
        },
        "description": {
          maxlength: 1024
        },
        "price_per_month" : {
          required: true,
          range: [1, 1000000]
        }

      },
      messages:{
        "name": {
          required: I18n.t('required_field'),
          maxlength: I18n.t('plan_name_length')
        },
        "description": {
          maxlength: I18n.t('description_length')
        },
        "price_per_month": {
          required: I18n.t('required_field'),
          range: I18n.t('price_per_month_range')
        }
      },
      errorPlacement:function(error, element){
        error.appendTo(element.parent());
      }
    });

    $("#pricing_plan_form_edit").validate({
      rules:{
        "name": {
          required: true,
          maxlength: 256
        },
        "description": {
          maxlength: 1024
        },
        "price_per_month" : {
          required: true,
          range: [1, 1000000]
        }

      },
      messages:{
        "name": {
          required: I18n.t('required_field'),
          maxlength: I18n.t('plan_name_length')
        },
        "description": {
          maxlength: I18n.t('description_length')
        },
        "price_per_month": {
          required: I18n.t('required_field'),
          range: I18n.t('price_per_month_range')
        }
      },
      errorPlacement:function(error, element){
        error.appendTo(element.parent());
      }
    });


    var tb = $("#pricing_plan_table").dataTable({
      sDom: '<"#tbhead"<"row"<"col col-lg-6 col-offset-6"f>>>rt<"#tbfoot"<"row"<"col col-lg-6"l><"col col-lg-6"p>>>',
      "bFilter": true,
      "bLengthChange": true,
      "bInfo": true,
      "bProcessing": false,
      "bServerSide": true,
      "sPaginationType": "full_numbers",
      "oLanguage": {
          "sEmptyTable": I18n.t('datatable.no_record'),
          "sZeroRecords": I18n.t('datatable.no_record')
        },
      "iDisplayLength": g_displayLength,
      "aaSorting": [[ 1, "asc" ]],
      "aoColumns": [
        { "sTitle": I18n.t('pricing_plan.j_name'),
          'bSortable': true,
          "sClass": "left",
          "sWidth": "30%"
        },
        { "sTitle": I18n.t('pricing_plan.j_description'),
          'bSortable': true,
          "sClass": "left",
          "sWidth": "40%"
        },
        { "sTitle": I18n.t('pricing_plan.j_active'),
          'bSortable': true,
          "fnRender": renderActive,
          "sClass": "center",
          "sWidth": "10%"
         },
        { "sTitle": I18n.t('pricing_plan.j_action'),
          'bSortable': false,
          "fnRender": renderAction,
          "sClass": "center",
          "sWidth": "20%"
        },
        {  "bVisible": false }
      ],
      //"sAjaxSource": "#{pricing_plans_path}",
      "fnInitComplete": function () {
        $('div.dataTables_filter input').focus();
        $('div.dataTables_filter input').unbind();
        $("div.dataTables_filter input").bind('keydown',function (e) {
          if (e.keyCode == 13) {
            $("#pricing_plan_table").dataTable().fnFilter(this.value );
            $("div.dataTables_filter input").focus();
          }
        });
      }
    });

    var tfc = $("#feature_include_table").dataTable({
      sDom: '<rt>',
      "bFilter": true,
      "bLengthChange": true,
      "bInfo": true,
      "bProcessing": true,
      'sScrollY':'200px',
      "bServerSide": true,
      "sPaginationType": "full_numbers",
      "iDisplayLength": 1000,
      "aaSorting": [[ 1, "asc" ]],
      "aoColumns": [
        { "sTitle": "Feature Name",
          'bSortable': false,
          "sClass": "left",
        },
        { "sTitle": "Supported",
          'bSortable': false,
          "fnRender": renderSupport,
          "sClass": "center",
        },
        {  "bVisible": false }
      ],
      "sAjaxSource": "/features/get_all_data"
    });

    var tfe = $("#feature_include_table_edit").dataTable({
      sDom: '<rt>',
      "bFilter": true,
      "bLengthChange": true,
      "bInfo": true,
      "bProcessing": true,
      'sScrollY':'200px',
      "bServerSide": true,
      "sPaginationType": "full_numbers",
      "iDisplayLength": 1000,
      "aaSorting": [[ 1, "asc" ]],
      "aoColumns": [
        { "sTitle": "Feature Name",
          'bSortable': false,
          "sClass": "left"
        },
        { "sTitle": "Supported",
          'bSortable': false,
          "fnRender": renderSupportEdit,
          "sClass": "center"
        },
        {  "bVisible": false }
      ],
      "sAjaxSource": "/features/get_all_data",
      "fnServerData": function ( sSource, aoData, myCallback ) {
        aoData = myParamsCollection(aoData);
        $.getJSON(sSource, aoData, function (json) {
            myCallback(json);
        });
      }
    });


    $("#btn_delete_pricing_plan").on('click',function(){
      delete_pp_request();
    });
    $("#bt_new_pricing_plan").on('click',function(){
      g_feature_ids = [];
      init_form("#pricing_plan_form");
      $("#new_pricing_plan.modal").modal("show");
      $('#feature_include_table').dataTable().fnReloadAjax();

    });

    $("#pricing_plan_form").submit(function(e){

      var result = JSON.stringify(get_feature("#pricing_plan_form"));
      var input = $("<input>").attr("type", "hidden").attr("name", "feature_data").val(result);
      $('#pricing_plan_form').append($(input));
      return true;
    });
    $("#pricing_plan_form_edit").submit(function(e){

      var result = JSON.stringify(get_feature("#pricing_plan_form_edit"));
      var input = $("<input>").attr("type", "hidden").attr("name", "feature_data").val(result);
      $('#pricing_plan_form_edit').append($(input));

      return true;
    });

  });
function myParamsCollection(aoData){
  //console.log(aoData);
}
function view_edit_dialog(obj){
  aPos = $('#pricing_plan_table').dataTable().fnGetPosition(obj.parentNode);
  aData = $('#pricing_plan_table').dataTable().fnGetData(aPos[0]);
  g_feature_ids = [];
  init_form("#edit_pricing_plan");
  get_pricing_plan_info(aData[4], function(ppInfo){
    $("#edit_pricing_plan input[name=name]").val(ppInfo.name);
    $("#edit_pricing_plan textarea[name=description]").val(ppInfo.description);
    $('#edit_pricing_plan input[name=price_per_month]').val(ppInfo.price_per_month);
    $('#edit_pricing_plan select[name=number_of_stores]').val(ppInfo.number_of_stores);
    $('#edit_pricing_plan select[name=users_staff]').val(ppInfo.user_staff);
    $('#edit_pricing_plan select[name=status]').val(ppInfo.status);
  });
  $('#feature_include_table_edit').dataTable().fnReloadAjax("/features/get_all_data_by_pricing_plan_id?id=" + aData[4] );
  $('#pp_id').val(aData[4]);
  $("#edit_pricing_plan.modal").modal("show");
}

function get_pricing_plan_info(id, callback){

  $.ajax({
    url: g_pricingPlanPath + "/" + id + "/edit",
    type: 'GET',
    dataType:'json'
  }).done(function(data){
    callback(data);
  });

}

function get_feature(form){
  var return_value = [];
  for(var i =0; i < g_feature_ids.length; i++){
    var f_id = g_feature_ids[i];
    if($(form + " label.active[feature_id="+ f_id +"]").attr("store") == "1"){
      return_value.push(f_id);
    }
  }
  return return_value;
}
// Author: KhoiPCQ
// Description: This JavaScript code handle event when user click delete on grid
//
// Created Date: July 26, 2013
function view_delete_pp_confirm(obj)
{
  aPos = $('#pricing_plan_table').dataTable().fnGetPosition(obj.parentNode);
  aData = $('#pricing_plan_table').dataTable().fnGetData(aPos[0]);
  $("#btn_delete_pricing_plan").val(aData);
}

function create_success(success){
  if(success){
    $("#new_pricing_plan.modal").modal("hide");
    init_form("#pricing_plan_form");
    showAlert('myAlert','alert-success', I18n.t("msg.msg_save_pricing_plan_success"));
    $('#pricing_plan_table').dataTable().fnReloadAjax();

  }
}

function update_success(success){
  if(success){
    $("#edit_pricing_plan.modal").modal("hide");
    init_form("#edit_pricing_plan");
    showAlert('myAlert','alert-success', I18n.t("msg.msg_update_pricing_plan_success"));
    $('#pricing_plan_table').dataTable().fnReloadAjax(); 
  }
}

function init_form(form){
  $(form + " input[name=name]").val("");
  $(form + " textarea[name=description]").val("");
  $(form + " input[name=price_per_month]").val("");
  $(form + " select[name=number_of_stores]").val(1);
  $(form + " select[name=users_staff]").val(1);
  $(form + " select[name=status]").val("true");
  $(form + " input[name=feature_data]").remove();
  $(form).validate().resetForm();
  $(".error").removeClass("error");
}
// Author: KhoiPCQ
// Description: This JavaScript code handle event when user ok to delete and store owner
//
// Created Date: July 26, 2013
function delete_pp_request()
{
  var request = $.ajax({
    url: g_url_delete_pricing_plan,
    type: "POST",
    data: {
      authenticity_token: g_token,
      id:$("#btn_delete_pricing_plan").val()},
    dataType: "JSON"
  });

    //when done ajax
    request.done(function(msg) {
      if(msg["status"]=="deleted"){
        showAlert('myAlert','alert-success', I18n.t("msg.msg_delete_pricing_plan_success"));
        $("#delete_notice").modal("hide");
        $('#pricing_plan_table').dataTable().fnReloadAjax();
      }else if(msg["status"]=="is_used"){
        $("#delete_notice").modal("hide");
        $("#warningModal").modal("show");
      }else{
        $("#delete_notice").modal("hide");
        $("#warningModalNotDelete").modal("show");
      }
    });

    //When failed
    request.fail(function(jqXHR, textStatus) {
      alert( "Request failed: " + textStatus );
    });
}

